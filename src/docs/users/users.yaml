paths:
  /api/users:
    get:
      summary: Obtener todos los usuarios de la base de datos
      tags:
        - Users
      responses:
        '200':
          description: OK - Usuarios obtenidos exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
    post:
      summary: Crear un nuevo usuario
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/createUser'
      responses:
        '201':
          description: OK - Usuario creado exitosamente
        '500':
          description: Error interno del servidor
  /api/users/{uid}:
    get:
      summary: Obtener un usuario por su id
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario
        schema:
          type: string
      responses:
        '200':
          description: OK - Usuario obtenido exitosamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Error interno del servidor
    put:
      summary: Actualizar un usuario por su id
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID del usuario
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/requestBodies/updateUser'
      responses:
        '200':
          description: OK - Usuario actualizado exitosamente
        '500':
          description: Error interno del servidor 
        '404':
          description: Usuario no encontrado
    delete:
      summary: Eliminar un usuario por su ID
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: ID único del usuario
        schema:
          type: string
      responses:
        '200':
          description: OK - Usuario eliminado exitosamente
        '404':
          description: Usuario no encontrado
        '500':
          description: Error interno del servidor
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID único del usuario
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        password:
          type: string
          description: Contraseña del usuario
      example:
        _id: '670b366df506570a025075c2'
        first_name: Jaron
        last_name: Monahan
        password: "$2b$10$sBaja.luQEzTRoWooYwT0.yAjLLn.SHhw2q9ZAGegToy6z8R3HXU6"
  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        password:
          type: string
          description: Contraseña del usuario
        email:
          type: string
          description: Correo electrónico del usuario
      example:
        first_name: Bob
        last_name: Smith
        password: "securePassword123"
        email: bob.smith@example.com
    updateUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico del usuario
      example:
        first_name: Charlie
        last_name: Brown
        email: charlie.brown@example.com